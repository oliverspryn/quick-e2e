package com.oliverspryn.gradle.plugin.model

import com.oliverspryn.gradle.BuildConfig

/**
 * Models all the necessary information which is required to uniquely
 * define a new, custom build type or to redefine an existing build
 * type (such as `debug` or `release`) with custom behaviors.
 *
 * @param applicationIdSuffix The suffix to append to the application ID
 *     for this unique build type. Default is
 *     `BuildConfig.App.APPLICATION_ID_NON_RELEASE_SUFFIX`. Providing
 *     `null` indicates that a suffix should not be used. Only application
 *     modules can use this property. Library modules do not support
 *     application IDs.
 * @param customBuildConfigFields A list of custom fields to add to the
 *     `BuildConfig` class generated by AGP for use at runtime. Default is
 *     an empty list, which specifies that no custom fields should be
 *     created.
 * @param enableUnitTestCoverage Whether to enable unit test coverage for
 *     this build type. Default is `true`.
 * @param initWithOtherPreExistingBuildType The name of another build type
 *     to inherit. Typically, this is either "debug" or "release". Default
 *     is "debug".
 * @param isDebuggable Whether this build type is debuggable. Default is
 *     `true`. Should be `false` for release builds. Should be `false` if
 *     `isMinifyEnabled` is `true`.
 * @param isInheritingFromBuildType Whether this build type is a built-in
 *     build type. If you are adding custom behaviors to the pre-existing
 *     "debug" or "release" build types, this value will be `true`. All
 *     other types should be `false`. Default is `false`.
 * @param isMinifyEnabled Whether to enable minification for this build
 *     type. Default is `false`. Should be `true` only for release builds.
 *     Ensure that `isDebuggable` is `false` if this is `true`.
 * @param isShrinkResources Whether to enable resource shrinking for this
 *     build type. Default is `false`. Should be `true` only for release
 *     builds.
 * @param name The name of the build type. This is the name that will
 *     appear in Android Studio's "Build Variants" window and as part of
 *     the tasks added to the build lifecycle. Names should be specified in
 *     `camelCase`.
 * @param proguardFiles The ProGuard configuration files for this build
 *     type. Default is `null`. `null` indicates that this build type may
 *     perform resource shrinking (per `isShrinkResources`) and/or
 *     minification (per `isMinifyEnabled`) but will not have a custom
 *     ProGuard rule set to reference while doing so. All build types that
 *     perform minification and resource shrinking should have a custom
 *     ProGuard rule set.
 * @param signingConfigName The name of the signing configuration that
 *     matches an available [SigningConfigs.name] and will be used to sign
 *     this build type on compilation. Default is `null`. `null` indicates
 *     that this build type will not be signed. Keep in mind that AGP
 *     provides a key by the name of "debug" if you wish to sign a build
 *     that is not intended for production. That is also a valid choice for
 *     this field for signing non-release builds.
 * @see BuildConfig.App.APPLICATION_ID_NON_RELEASE_SUFFIX
 * @see BuildConfigField
 * @see ProguardFiles
 * @see SigningConfigs
 */
abstract class CustomBuildType(
    val applicationIdSuffix: String? = BuildConfig.App.APPLICATION_ID_NON_RELEASE_SUFFIX,
    val customBuildConfigFields: List<BuildConfigField> = emptyList(),
    val enableUnitTestCoverage: Boolean = true,
    val initWithOtherPreExistingBuildType: String? = "debug",
    val isDebuggable: Boolean = true,
    val isInheritingFromBuildType: Boolean = false,
    val isMinifyEnabled: Boolean = false,
    val isShrinkResources: Boolean = false,
    val name: String,
    val proguardFiles: ProguardFiles? = null,
    val signingConfigName: String? = null
)
