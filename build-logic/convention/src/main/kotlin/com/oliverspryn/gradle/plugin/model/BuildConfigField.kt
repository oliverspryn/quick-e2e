package com.oliverspryn.gradle.plugin.model

/**
 * Creates new fields for the BuildConfig class which is generated by the
 * Android Gradle Plugin and provided to the application at runtime.
 *
 * Historically, these fields would be created directly in a Gradle script,
 * like so:
 * ```kotlin
 * android {
 *     defaultConfig {
 *         buildConfigField("String", "APP_NAME", "\"My App\"")
 *         buildConfigField("boolean", "SHOW_ON_BOARDING", "true")
 *         buildConfigField("int", "VERSION_CODE", "100")
 *     }
 * }
 * ```
 *
 * This class models the same fields, but in a more type-safe and reusable
 * way that removes extra ceremony needed to accommodate each primitive
 * type.
 *
 * This class can model each of the following types:
 * - `boolean`
 * - `int`
 * - `String`
 *
 * @param name The name of the field to add to the `BuildConfig` class.
 * @param type The type of the field to add to the `BuildConfig` class.
 * @param value The value of the field to add to the `BuildConfig` class.
 */
data class BuildConfigField(
    val name: String,
    val type: String,
    private val value: String
) {
    /**
     * Pre-formats the value of the field so that is can be applied directly to
     * the `BuildConfig` class in a Gradle script.
     */
    val formattedValue: String
        get() = if (type == "String") {
            "\"$value\""
        } else {
            value
        }

    /**
     * A convenience constructor for creating a new `BuildConfig` `boolean`
     * field type with the given name and value.
     *
     * Historically, these fields would be created directly in a Gradle script,
     * like so:
     * ```kotlin
     * android {
     *     defaultConfig {
     *         buildConfigField("boolean", "SHOW_ON_BOARDING", "true")
     *     }
     * }
     * ```
     *
     * @param name The name of the field to add to the `BuildConfig` class.
     * @param value The value of the field to add to the `BuildConfig` class.
     */
    constructor(name: String, value: Boolean) : this(name, "boolean", value.toString())

    /**
     * A convenience constructor for creating a new `BuildConfig` `int` field
     * type with the given name and value.
     *
     * Historically, these fields would be created directly in a Gradle script,
     * like so:
     * ```kotlin
     * android {
     *    defaultConfig {
     *        buildConfigField("int", "VERSION_CODE", "100")
     *    }
     * }
     * ```
     *
     * @param name The name of the field to add to the `BuildConfig` class.
     * @param value The value of the field to add to the `BuildConfig` class.
     */
    constructor(name: String, value: Int) : this(name, "int", value.toString())

    /**
     * A convenience constructor for creating a new `BuildConfig` `String`
     * field type with the given name and value.
     *
     * Historically, these fields would be created directly in a Gradle script,
     * like so:
     * ```kotlin
     * android {
     *    defaultConfig {
     *        buildConfigField("String", "APP_NAME", "\"My App\"")
     *    }
     * }
     * ```
     *
     * @param name The name of the field to add to the `BuildConfig` class.
     * @param value The value of the field to add to the `BuildConfig` class.
     */
    constructor(name: String, value: String) : this(name, "String", value)
}
